#!/usr/bin/env node

var _ = require('lodash');
var fs = require('fs');
var moment = require('moment');
var program = require('commander');
var async = require('async');
var utils = require('./cli-utils');
program = utils.configureCommander(program);


program
  .option('-o, --output <file>', 'get JSON output in file');
  .option('-i, --info', 'include extended info');

program
  .parse(process.argv);

var args = program.args;

var skip = 0,
  limit = 55, got;

console.warn("* TX History:")
var allTxs=[];
utils.getClient(program, {
  mustExist: true
}, function(client) {

  async.doWhilst(
    function(cb) {
      client.getTxHistory({
        skip: skip,
        limit: limit + 1,
        includeExtendedInfo: program.info,
      }, function(err, txs) {
        got = txs.length;

        if (_.isEmpty(txs))
          return;

        if (program.output) {
          allTxs.push(txs);
          fs.writeFile(program.output,JSON.stringify(txs), {
            encoding: 'utf8'
          }, function(err) {
            if (err) console.error(err);
            console.warn('Output file updated')
          });

        } else {
          _.each(txs, function(tx) {
            var time = moment(tx.time * 1000).fromNow();
            var amount = utils.renderAmount(tx.amount);
            var confirmations = tx.confirmations || 0;
            var proposal = tx.proposalId ? '["' + tx.message + '" by ' + tx.creatorName + '] ' : '';
            switch (tx.action) {
              case 'received':
                direction = '<=';
                break;
              case 'moved':
                direction = '==';
                break;
              case 'sent':
                direction = '=>';
                break;
            }
            console.log("\t%s: %s %s %s %s(%s confirmations)", time, direction, tx.action, amount, proposal, confirmations);
          });
        }
        cb();
      });
    },
    function() {
      var cont = got > limit;
      if (cont) {
        skip+= limit;
        console.warn('* Skip:', skip);
      }
      return cont;
    },
    function (err) {
      console.log(err);
    }
  );
});
